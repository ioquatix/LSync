#!/usr/bin/env ruby

# This script takes a given path, and renames it with the given format. 
# It then ensures that there is a symlink called "latest" that points 
# to the renamed directory.

require 'pathname'
require 'fileutils'
require 'optparse'

OPTIONS = {
	:Format => "%Y.%m.%d-%H.%M.%S",
	:Latest => "latest",
	:UseGMT => true,
	:Destination => nil
}

ARGV.options do |o|
	script_name = File.basename($0)

	o.set_summary_indent('  ')
	o.banner = "Usage: #{script_name} [options] [directory]"
	o.define_head "This script is used to rotate directories."

	o.separator ""
	o.separator "Help and Copyright information"

	o.on("-f format", String, "Set the format of the rotated directory names. See Time$strftime") do |format| 
		OPTIONS[:Format] = format
	end

	o.on("-l latest", String, "Set the name for the latest rotation symlink.") do |latest|
		OPTIONS[:Latest] = latest
	end

	o.on("-d destination", String, "Set the directory to move rotated backups.") do |destination|
		OPTIONS[:Destination] = destination
	end

	o.on_tail("--copy", "Display copyright information") do
		puts "#{script_name}. Copyright (c) 2008-2009 Samuel Williams. Released under the GPLv3."
		puts "See http://www.oriontransfer.co.nz/ for more information."

		exit
	end

	o.on_tail("-h", "--help", "Show this help message.") do
		puts o
		exit
	end
end.parse!

time = Time.now

if OPTIONS[:UseUTC]
	time = time.utc
end

dir = Pathname.new(ARGV[0] || ".inprogress")
rotation_dir = Pathname.new(OPTIONS[:Destination] ? OPTIONS[:Destination] : dir.dirname)
rotated_name = time.strftime(OPTIONS[:Format])
rotated_dir = rotation_dir + rotated_name
latest_link = rotation_dir + OPTIONS[:Latest]

# Move rotated dir
FileUtils.mv(dir, rotated_dir)

# Recreate latest symlink
if File.symlink?(latest_link)
	puts "Removing old latest link..."
	FileUtils.rm(latest_link)
end

puts "Creating latest symlink to #{rotated_name}"
FileUtils.ln_s(rotated_name, latest_link)
