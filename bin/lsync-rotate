#!/usr/bin/env ruby

# Copyright (c) 2007, 2011 Samuel G. D. Williams. <http://www.oriontransfer.co.nz>
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

# This script takes a given path, and renames it with the given format. 
# It then ensures that there is a symlink called "latest" that points 
# to the renamed directory.

require 'pathname'
require 'fileutils'
require 'optparse'

OPTIONS = {
	:Format => "%Y.%m.%d-%H.%M.%S",
	:Latest => "latest",
	:UseUTC => false,
	:Destination => nil
}

ARGV.options do |o|
	script_name = File.basename($0)

	o.set_summary_indent('  ')
	o.banner = "Usage: #{script_name} [options] [directory]"
	o.define_head "This script is used to rotate directories."

	o.separator ""
	o.separator "Help and Copyright information"

	o.on("-f format", String, "Set the format of the rotated directory names. See Time\#strftime") do |format| 
		OPTIONS[:Format] = format
	end

	o.on("-l latest", String, "Set the name for the latest rotation symlink.") do |latest|
		OPTIONS[:Latest] = latest
	end

	o.on("-d destination", String, "Set the directory to move rotated backups.") do |destination|
		OPTIONS[:Destination] = destination
	end
	
	o.on("-u", "Use UTC time for directory names.") do
		OPTIONS[:UseUTC] = true
	end

	o.on_tail("--copy", "Display copyright information") do
		puts "#{script_name}. Copyright (c) 2007-2011 Samuel Williams. Released under the MIT license."
		puts "See http://www.oriontransfer.co.nz/ for more information."

		exit
	end

	o.on_tail("-h", "--help", "Show this help message.") do
		puts o
		exit
	end
end.parse!

time = Time.now

if OPTIONS[:UseUTC]
	time = time.utc
end

dir = Pathname.new(ARGV[0] || "backup.inprogress")
rotation_dir = Pathname.new(OPTIONS[:Destination] ? OPTIONS[:Destination] : dir.dirname)
rotated_name = time.strftime(OPTIONS[:Format])
rotated_dir = rotation_dir + rotated_name
latest_link = rotation_dir + OPTIONS[:Latest]

unless File.exist? dir
	$stderr.puts "Can not find source directory to rotate: #{dir} in #{Dir.getwd}!"
	exit(10)
end

if File.exist? rotated_dir
	$stderr.puts "Destination rotation name #{rotated_dir} already exists in #{Dir.getwd}!"
	exit(20)
end

puts "Rotating #{dir} to #{rotated_dir}..."

# Move rotated dir
FileUtils.mv(dir, rotated_dir)

# Recreate latest symlink
if File.symlink?(latest_link)
	puts "Removing old latest link..."
	FileUtils.rm(latest_link)
end

puts "Creating latest symlink to #{rotated_name}"
FileUtils.ln_s(rotated_name, latest_link)
